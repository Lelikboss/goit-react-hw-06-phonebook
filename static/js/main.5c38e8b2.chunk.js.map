{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/MainContainer/MainContainer.module.css","redux/contacts/reducers.js","redux/store.js","redux/contacts/actions.js","redux/contacts/selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/ContactItem/ContactItem.js","Components/Filter/Filter.js","Components/MainContainer/MainContainer.js","App.js","index.js"],"names":["module","exports","contactsList","createReducer","id","name","number","state","payload","filter","contact","contactFilter","_","persistConfig","key","version","storage","blacklist","contactReducer","combineReducers","contacts","persistedContactReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","addContact","createAction","deleteContact","filterValue","getContacts","getFilter","getVisibleItems","normalizedFilter","toLowerCase","e","includes","ContactForm","addNewContact","onAdd","dispatch","useDispatch","useSelector","inputName","uuidv4","inputNumber","useState","setName","setNumber","handleInputChange","currentTarget","value","reset","onSubmit","preventDefault","obj","map","alert","console","log","className","s","form","type","pattern","title","required","onChange","placeholder","disabled","ContactList","children","length","empty","list","ContactItem","onClick","Filter","find","target","MainContainer","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c38e8b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2pRe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__m6vH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__1bNvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContainer_container__Sl_NH\"};","import { createReducer } from '@reduxjs/toolkit';\r\nconst initState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nexport const contactsList = createReducer(initState, {\r\n  'contact/add': (state, { payload }) => [...state, payload],\r\n  'contact/delete': (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\nexport const contactFilter = createReducer('', {\r\n  'filter/value': (_, { payload }) => payload,\r\n});\r\n// const contactsList = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case 'contact/add':\r\n//       return [...state, action.payload];\r\n//     case 'contact/delete':\r\n//       return state.filter(contact => contact.id !== action.payload.id);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const contactFilter = (state = '', action) => {\r\n//   return state;\r\n// };\r\n","// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { contactsList, contactFilter } from './contacts/reducers';\r\nimport { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  version: 1,\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n// export const store = createStore(contactReducer, composeWithDevTools());\r\nconst contactReducer = combineReducers({\r\n  contacts: contactsList,\r\n  filter: contactFilter,\r\n});\r\nconst persistedContactReducer = persistReducer(persistConfig, contactReducer);\r\nexport const store = configureStore({\r\n  reducer: persistedContactReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { createAction } from '@reduxjs/toolkit';\r\nexport const addContact = createAction('contact/add');\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const filterValue = createAction('filter/value');\r\n// export const addContact = contact => ({\r\n//   type: 'contact/add',\r\n//   payload: contact,\r\n// });\r\n// export const deleteContact = id => ({\r\n//   type: 'contact/delete',\r\n//   payload: { id },\r\n// });\r\n// export const filterValue = value => ({\r\n//   type: 'filter/value',\r\n//   payload: value,\r\n// })\r\n","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getVisibleItems = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(e => e.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/actions';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\n// import { connect } from 'react-redux';\r\nfunction ContactForm({ addNewContact, onAdd }) {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const inputName = uuidv4();\r\n  const inputNumber = uuidv4();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    if (contacts.map(contact => contact.name).includes(obj.name)) {\r\n      alert(`${obj.name} is already in contacts`);\r\n    } else {\r\n      console.log('yello');\r\n      dispatch(addContact(obj));\r\n    }\r\n    // onAdd(obj);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={inputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={inputNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"xxx-xx-xx\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" disabled={!name || !number}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     contactsList: state.contacts,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onAdd: cont => dispatch(addContact(cont)),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n// ContactForm.propTypes = {\r\n//   addNewContact: PropTypes.func.isRequired,\r\n// };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ children }) => {\r\n  const contacts = useSelector(getContacts);\r\n  console.log(contacts.length);\r\n  return (\r\n    <>\r\n      {contacts.length === 0 ? (\r\n        <p className={s.empty}>EMPTY</p>\r\n      ) : (\r\n        <ul className={s.list}>{children}</ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/actions';\r\nimport { getVisibleItems } from '../../redux/contacts/selectors';\r\nconst ContactItem = () => {\r\n  const contactsList = useSelector(getVisibleItems);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {contactsList.map(({ name, number, id }) => (\r\n        <li key={uuidv4()}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default ContactItem;\r\n// const ContactItem = ({ contactsList, onDeleteItem, onDelete }) => {\r\n//   return (\r\n//     <>\r\n//       {contactsList.map(({ name, number, id }) => (\r\n//         <li key={uuidv4()}>\r\n//           <p>\r\n//             {name}: {number}\r\n//           </p>\r\n//           <button type=\"button\" onClick={() => onDelete(id)}>\r\n//             Удалить\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </>\r\n//   );\r\n// };\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     contactsList: state.contacts,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onDelete: del => dispatch(deleteContact(del)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(ContactItem);\r\n\r\n// ContactItem.propTypes = {\r\n//   state: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n//   onDeleteItem: PropTypes.func.isRequired,\r\n// };\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/selectors';\r\nimport { filterValue } from '../../redux/contacts/actions';\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <div className={s.find}>\r\n        <p>Find contacts by name</p>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => dispatch(filterValue(e.target.value))}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n","import React from 'react';\r\nimport s from './MainContainer.module.css';\r\nconst MainContainer = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\nexport default MainContainer;\r\n","// import React, { useState } from 'react';\n// import { useLS } from './hooks/useLS';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport ContactItem from './Components/ContactItem';\nimport Filter from './Components/Filter';\nimport MainContainer from './Components/MainContainer';\n// import { useDispatch } from 'react-redux';\n// import { filterValue } from './redux/contacts/actions';\nexport default function App() {\n  // const [contacts, setContacts] = useLS('contacts', [\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ]);\n  // const [filter, setFilter] = useState('');\n\n  //Redux\n  // const dispatch = useDispatch();\n  // Redux\n  // const addNewContact = obj => {\n  //   const repeatingName = contacts\n  //     .map(contact => contact.name)\n  //     .includes(obj.name);\n  //   if (repeatingName) {\n  //     alert(`${obj.name} is already in contacts`);\n  //   } else {\n  //     setContacts(prevState => [...prevState, obj]);\n  //   }\n  // };\n  // const deleteItem = itemId => {\n  //   setContacts(prevState => prevState.filter(item => item.id !== itemId));\n  // };\n  // const changeFilter = e => {\n  //   setFilter(e.target.value);\n  //   dispatch(filterValue(e.target.value));\n  // };\n  // const getVisibleItems = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(e =>\n  //     e.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n  return (\n    <MainContainer>\n      <h1>Phonebook</h1>\n      <ContactForm\n      // addNewContact={addNewContact}\n      />\n      <h2>Contacts</h2>\n      <Filter\n      // value={filter}\n      // onChange={changeFilter}\n      />\n      {/* {contacts.length !== 0 && ( */}\n      <ContactList>\n        <ContactItem\n        // state={getVisibleItems()}\n        // onDeleteItem={deleteItem}\n        />\n      </ContactList>\n      {/* )} */}\n    </MainContainer>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}